{"componentChunkName":"component---src-templates-blog-post-js","path":"/gatsby/v4-tutorial/","result":{"data":{"site":{"siteMetadata":{"title":"pleed0215's blog","author":"pleed0215","siteUrl":"https://pleed0215.github.io","comment":{"disqusShortName":"","utterances":"pleed0215/pleed0215.github.io"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"86b83167-4ec5-5f28-93c5-2632f22c82cd","excerpt":"Starting gatsby Part 1: Create and Deploy Your First Gatsby Site 튜토리얼 시작 중.. 1. Create and Deploy your first gatsby site 처음 내용은 별 건 없고, gatsby cli를 이용하여 gatsby 프로젝트를 만들고, gatsby cloud에 deploy하는 것을 알려준다. 2. Use and styled React components 나는 타입스크립트를 이용하고 싶은데, css module…","html":"<h1 id=\"starting-gatsby\" style=\"position:relative;\"><a href=\"#starting-gatsby\" aria-label=\"starting gatsby permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Starting gatsby</h1>\n<p><a href=\"https://www.gatsbyjs.com/docs/tutorial/part-1/\">Part 1: Create and Deploy Your First Gatsby Site</a></p>\n<p>튜토리얼 시작 중..</p>\n<h1 id=\"1-create-and-deploy-your-first-gatsby-site\" style=\"position:relative;\"><a href=\"#1-create-and-deploy-your-first-gatsby-site\" aria-label=\"1 create and deploy your first gatsby site permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Create and Deploy your first gatsby site</h1>\n<p>처음 내용은 별 건 없고, gatsby cli를 이용하여 gatsby 프로젝트를 만들고, gatsby cloud에 deploy하는 것을 알려준다.</p>\n<h2 id=\"2-use-and-styled-react-components\" style=\"position:relative;\"><a href=\"#2-use-and-styled-react-components\" aria-label=\"2 use and styled react components permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Use and styled React components</h2>\n<p>나는 타입스크립트를 이용하고 싶은데, css module 사용하는데 typescript에서 에러가 발생한다. 그렇다고 게츠비 돌리는 데 에러는 아닌데(tsc 사용 X)… 그래서 일단은 styled-components를 이용하긴 할 건데.. 조금 찝찝하다.</p>\n<h2 id=\"gatsby-plugin\" style=\"position:relative;\"><a href=\"#gatsby-plugin\" aria-label=\"gatsby plugin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-plugin</h2>\n<p>게츠비 플러그인을 쓰려면 두 가지 단계가 필요하다.</p>\n<p>첫번째는 gatsby plugin 패키지를 npm이나 yarn을 통해 설치하고 나서, gatsby-config.js를 통해서 설정을 해주면 된다.</p>\n<p>패키지마다 설정이 다르니, gatsby plugin 페이지에 가서 사용법을 같이 보면 된다.</p>\n<p><a href=\"https://www.gatsbyjs.com/plugins/\">Welcome to the Gatsby Plugin Library</a></p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteMetadata<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    siteUrl<span class=\"token operator\">:</span> <span class=\"token string\">\"https://www.yourdomain.tld\"</span><span class=\"token punctuation\">,</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">\"my-first-gatsby\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// styled-component도 설치해줘야 함.</span>\n\t\tresolve<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-plugin-styled-components</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n\t    options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t      <span class=\"token comment\">// Add any options here</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"3-add-features-with-plugins\" style=\"position:relative;\"><a href=\"#3-add-features-with-plugins\" aria-label=\"3 add features with plugins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Add features with plugins</h1>\n<p>StaticImage라는 플러그인 사용하는 법을 알려주는데, 내용상 딱히 별 건 없어서.. 넘어가도 될 것 같다. 플러그인 설치 + 설정  + 사용의 예시를 보여주는 페이지</p>\n<h1 id=\"4-query-for-data-with-graphql\" style=\"position:relative;\"><a href=\"#4-query-for-data-with-graphql\" aria-label=\"4 query for data with graphql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Query for data with graphQL</h1>\n<p>gatsby가 graphql을 사용하는 것은 알고 있었는데 몇 가지 문제가 있었다.</p>\n<ol>\n<li>webstorm에서 graphql endpoint의 schema를 못 읽는지.. graphql 쿼리에서 자꾸 오류를 내뿜는다.</li>\n<li>typescript 관련하여 문제가 좀 있다.</li>\n</ol>\n<p>첫번째 문제는 어찌저찌해서 schema 파일을 만들면 될 것 같은데, 두번째 문제가 조금 에러인 것 같은데..</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> BlogPage<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span><span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span>PageProps<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span> <span class=\"token attr-name\">pageTitle</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>My Blog Posts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">My cool posts will go in here</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>data <span class=\"token keyword\">as</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>allFile<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위 코드에서 보면 data가 Object타입으로 되어 있고, d.ts 파일 가서 타입을 확인을 해보면.. DataType으로 되어 있다. 더 파고 들어가면 DataType은 그냥 object이다.</p>\n<p>그래서 일단 data를 사용할 때에는 any로 타입캐스팅을 해놨는데.. 별로 좋진 못하다.</p>\n<p>일단 여기는 튜토리얼치고는 꽤 까다로운 내용이었는데.. 일단 아래 패키지를 확인해보자.</p>\n<p><strong><code class=\"language-text\">gatsby-source-filesystem</code> plugin to pull data into your site from your computer’s filesystem.</strong></p>\n<p><a href=\"https://www.gatsbyjs.com/docs/tutorial/part-4/#meet-gatsbys-graphql-data-layer\">Part 4: Query for Data with GraphQL</a></p>\n<p>gatsby의 GraphQL Data layer에 대해 알아봐야 한다.</p>\n<p><code class=\"language-text\">CMS</code>: Content Management System</p>\n<p>데이터 소스를 관리해주는 시스템이라고 보면 되는데, source plugin을 통해서 접근을 할 수 있게 해준다. 소스가 아마도 여러개가 있는 것 같다. <code class=\"language-text\">gatsby-source</code>라고 시작하는 이름을 가진 플러그인들이다.</p>\n<p>gatsby-source-filesystem은 filesystem을 접근할 수 있게끔 해주는 플러그인인 것인데.. 플러그인이 있냐 없냐에 따라 graphql 쿼리 결과가 달라지더라.</p>\n<p>gatsby는 react router dom이나 useQuery 같은 apollo 비스무리한 것들이 있긴한데, 따로 설치하는 게 아니라 전부 gatsby 패키지에 포함되어 있다. 오히려 이것저것 설치하지 않아도 되어서 좋다.</p>\n<p>useQuery 대신 useStaticQuery를 이용하는데, 뭐 graphql의 사용법이어야 봤자 똑같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteMetadata<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    siteUrl<span class=\"token operator\">:</span> <span class=\"token string\">\"https://www.yourdomain.tld\"</span><span class=\"token punctuation\">,</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">\"my-first-gatsby\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p><code class=\"language-text\">gatsby-config.js</code> 파일을 보면 위와 같이 siteMetaData라는 항목이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token function\">useStaticQuery</span><span class=\"token punctuation\">(</span>graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>위와 같은 쿼리가 이미 설정되어 있기 때문에 위와 같이 쿼리를 해주면 siteMetaData를 읽어올 수 있는 것..</p>\n<h3 id=\"blog-만들어-보기\" style=\"position:relative;\"><a href=\"#blog-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EA%B8%B0\" aria-label=\"blog 만들어 보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Blog 만들어 보기</h3>\n<p>일단 , 위에서 언급한 gatsby-source-filesystem을 설치하고 아래와 같이 gatsby-config.js의 plugin을 설정해주면, 사용준비는 된 것.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token punctuation\">{</span>\n  resolve<span class=\"token operator\">:</span> <span class=\"token string\">\"gatsby-source-filesystem\"</span><span class=\"token punctuation\">,</span>\n  options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">blog</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    path<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/blog</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>위의 설정에서 <code class=\"language-text\">path</code>는 data layer를 설정해 놓은 것이고, <code class=\"language-text\">name</code> 은 각 파일의 <code class=\"language-text\">sourceInstanceName</code> 필드를 설정한 것이라고 하는데.. 이건 잘 이해가..</p>\n<p>무튼 위와 같이 설정을 해 놓고..</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token definition-query function\">MyQuery</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token object\">allFile</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token object\">nodes</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">name</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이런 쿼리 문을 주면, 위에서 설정 해 놓은대로 blog 디렉토리에서 파일 노드들을 알려준다.</p>\n<h1 id=\"5-transform-data-to-use-mdx\" style=\"position:relative;\"><a href=\"#5-transform-data-to-use-mdx\" aria-label=\"5 transform data to use mdx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. Transform data to use MDX</h1>\n<p><code class=\"language-text\">gatsby-source-filesystem</code> 은 blog file들의 이름들만 리턴을 해줬는데, 실제 내용을 가지고 오려면 <code class=\"language-text\">transformer plugin</code> 을 사용해야 한다.</p>\n<h2 id=\"gatsby-plugin-mdx\" style=\"position:relative;\"><a href=\"#gatsby-plugin-mdx\" aria-label=\"gatsby plugin mdx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gatsby-plugin-mdx</h2>\n<p>여기 튜토리얼에서는 transfomer plugin 중 하나인 <code class=\"language-text\">gatsby-plugin-mdx</code> 를 사용할 예정인데, 보통 transformer 플러그인은 <code class=\"language-text\">gatsby-transformer-</code> 형식을 갖는데, 유일한 예외가 gatsby-pluging-mdx다.</p>\n<p><a href=\"https://www.gatsbyjs.com/docs/tutorial/part-5/#a-closer-look-at-gatsbys-graphql-data-layer\">Part 5: Transform Data to Use MDX</a></p>\n<h3 id=\"설치--설정\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98--%EC%84%A4%EC%A0%95\" aria-label=\"설치  설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치 &#x26; 설정</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gatsby-plugin-mdx @mdx-js/mdx @mdx-js/react</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteMetadata<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">\"My Super Cool Blog\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"gatsby-plugin-image\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"gatsby-plugin-sharp\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      resolve<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-source-filesystem</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        name<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">blog</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n        path<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>__dirname<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/blog/</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token comment\">// 추가.</span>\n   <span class=\"token string\">\"gatsby-plugin-mdx\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>마크다운 관련된 플러그인은 많다.</p>\n<p>위의 링크가서 팁을 확인해봄이 좋다.</p>\n<p>Here are some popular remark plugins:</p>\n<ul>\n<li>\n<p><a href=\"https://www.gatsbyjs.com/plugins/gatsby-remark-images/\">gatsby-remark-images</a>: Use this if you want to generate responsive images when using the Markdown image syntax (which looks like this: <code class=\"language-text\">![alt](image url)</code>).</p>\n<ul>\n<li>To use this plugin, you’ll also need <code class=\"language-text\">gatsby-plugin-sharp</code>, which you installed already in Part 3.</li>\n</ul>\n</li>\n<li><a href=\"https://www.gatsbyjs.com/plugins/gatsby-remark-prismjs/\">gatsby-remark-prismjs</a>: Add syntax highlighting to your code blocks.</li>\n<li><a href=\"https://www.gatsbyjs.com/plugins/gatsby-remark-autolink-headers/\">gatsby-remark-autolink-headers</a>: Automatically create links for all the headers in your Markdown content.</li>\n</ul>\n<p>Try searching for <code class=\"language-text\">gatsby-remark-</code> in the <a href=\"https://www.gatsbyjs.com/plugins/\">Gatsby Plugin Library</a> for a full list.</p>\n<p>위와 같이 설정하고, graphiql playground에서 아래와 같은 코드를 넣어서, 잘 작동하는 확인을 해보면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token definition-query function\">MyQuery</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">allMdx</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">sort</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token attr-name\">fields</span><span class=\"token punctuation\">:</span> <span class=\"token property\">frontmatter___date</span><span class=\"token punctuation\">,</span> <span class=\"token attr-name\">order</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">DESC</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token object\">nodes</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token object\">frontmatter</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property-query\">date</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">formatString</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"MMMM D, YYYY\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token property\">title</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token property\">id</span>\n      <span class=\"token property\">body</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위의 쿼리문을 이용해서 <code class=\"language-text\">blog.tsx</code> 의 코드를 아래와 같이 바꿔주면..</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> BlogPage<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span><span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span>PageProps<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span> <span class=\"token attr-name\">pageTitle</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>My Blog Posts<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">My cool posts will go in here</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>data <span class=\"token keyword\">as</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>allMdx<span class=\"token punctuation\">.</span>nodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n                <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>article</span> <span class=\"token attr-name\">key</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Posted: </span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MDXRenderer</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>node<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MDXRenderer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>article</span><span class=\"token punctuation\">></span></span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"https://i.ibb.co/cCWx0zT/gatsby-tutorial.png\" alt=\"스크린샷 2021-11-23 오후 1.34.12.png\"></p>\n<p>대략 이런식으로 완성이 된다. 굿</p>\n<h1 id=\"6-create-pages-programmatically-from-data\" style=\"position:relative;\"><a href=\"#6-create-pages-programmatically-from-data\" aria-label=\"6 create pages programmatically from data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Create Pages Programmatically from data</h1>\n<p>위의 내용과 연장선상에 있는 것인데..</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token punctuation\">{</span>\n  <span class=\"token object\">allMdx</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token object\">nodes</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">slug</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>slug까지 기본적으로 만들져 있다.</p>\n<p><code class=\"language-text\">src/pages/{mdx.slug}.tsx</code> 에 페이지 컴포넌트를 만들어주면…</p>\n<p><code class=\"language-text\">[http://localhost:8000/{slug}](http://localhost:8000/{slug})</code> 페이지를 만들어준다. 자.동.으.로…</p>\n<h2 id=\"특정-페이지-쿼리\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A0%95-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%BF%BC%EB%A6%AC\" aria-label=\"특정 페이지 쿼리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특정 페이지 쿼리</h2>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token definition-query function\">MyQuery</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">mdx</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token object\">frontmatter</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">title</span>\n      <span class=\"token property-query\">date</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">formatString</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"MMMM D, YYYY\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token property\">body</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>allMdx가 아니라 mdx라고 쿼리를 주면 되고, 변수 id가 있음..을 알면 된다.</p>\n<p>위의 내용에 보면 PageProps의 타입 때문에 고민된다고 하였는데, PageProps도 이미 제네릭 타입으로 되어 있어서, 타입을 추가할 수 있다.</p>\n<blockquote>\n<p>export type PageProps&#x3C;DataType, PageContextType, LocationState></p>\n</blockquote>\n<p>로 되어 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> BlogPost<span class=\"token operator\">:</span> React<span class=\"token punctuation\">.</span><span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span>PageProps<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> data<span class=\"token operator\">:</span> any <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Layout</span></span> <span class=\"token attr-name\">pageTitle</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>mdx<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>mdx<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MDXRenderer</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>mdx<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MDXRenderer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Layout</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> BlogPost<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> graphql<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    query ($id: String) {\n        mdx(id: { eq: $id }) {\n            frontmatter {\n                title\n                date(formatString: \"YYYY-MM-DD\")\n            }\n            body\n        }\n    }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>query와 BlogPage를 위 같이 해 놓으면 mdx를 읽어 올 수 있다.</p>\n<p>어려운 내용은 없는데, Page 컴포넌트 query를 저처럼 작성해 놓으면 알아서 정보를 넘겨서 data로 가져올 수 있는.. 구조는 약간 nextjs와 좀 비슷한 냄새가 난다.</p>\n<p>blog/index에서 링크 부분을 추가하는 내용은 있지만 크게 어려운 내용은 아니라서 넘기도록 한다.</p>\n<h1 id=\"7-add-dynamic-images-from-data\" style=\"position:relative;\"><a href=\"#7-add-dynamic-images-from-data\" aria-label=\"7 add dynamic images from data permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. Add Dynamic Images from data</h1>\n<p>이번엔 이미지를 dynamic 하게 추가하는 내용…</p>\n<p><a href=\"https://www.gatsbyjs.com/docs/tutorial/part-7/#install-and-configure-gatsby-transformer-sharp\">Part 7: Add Dynamic Images from Data</a></p>\n<p><code class=\"language-text\">gatsby-transformer-sharp</code> 를 이용한다.</p>\n<p>hero image를 이용하기 위함이라는데..</p>\n<p>hero image가 뭔지는 잘 모르겠지만, 내용에 있는 것으로는 그냥 블로그 최상단에 있는 그림인 것 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span>\n<span class=\"token font-matter yaml language-yaml\">title: \"Yet Another Post\"\ndate: \"2021-07-25\"\nhero_image: \"./jane-almon-7rriIaBH6JY-unsplash.jpg\"\nhero_image_alt: \"A white pitbull wearing big googly-eye glasses\"\nhero_image_credit_text: \"Jane Almon\"\nhero_image_credit_link: \"https://unsplash.com/photos/7rriIaBH6JY\"</span>\n<span class=\"token punctuation\">---</span></span>\n...</code></pre></div>\n<p>위와 같이 header 부분에 hero image 관련된 내용이 추가가 됐다.</p>\n<p><img src=\"https://i.ibb.co/60MVb4K/Untitled.png\" alt=\"Untitled\"></p>\n<p>튜토리얼에 있는 그림이다.</p>\n<p>위와같은 내용으로 이미지를 로드해준다는 것인데..</p>\n<p>아무튼 간에 transformer라는 것이.. graphql로 데이터를 가져다 준다는 것이니까..</p>\n<p>local에 있는 이미지를 graphql로 옮겨준다고 생각을 하자.</p>\n<h3 id=\"설치-및-설정\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EC%B9%98-%EB%B0%8F-%EC%84%A4%EC%A0%95\" aria-label=\"설치 및 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설치 및 설정</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> gatsby-transformer-sharp</code></pre></div>\n<p>gatsby-config.js에는 아래 내용을 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteMetadata<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">\"My First Gatsby Site\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ...existing plugins</span>\n    <span class=\"token string\">\"gatsby-transformer-sharp\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"query\" style=\"position:relative;\"><a href=\"#query\" aria-label=\"query permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>query</h3>\n<p>위의 설정을 마치고, 블로그에 그림을 넣는데.. 블로그에 그냥 그림을 넣을 수는 없으니까.. 각 블로그 mdx파일의 파일명과 동일한 디렉토리를 만들어서 mdx파일을 각각 index.mdx로 설정을 해준다.</p>\n<p>이를테면, <code class=\"language-text\">first-blog.mdx</code> 라는 파일이 있었다면.. first-blog라는 디렉토리를 만들어서 first-blog.mdx파일명은 그 밑에 index.mdx로 변경을 하자는 것..</p>\n<p>그리고 쿼리문..</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">query</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$id</span><span class=\"token punctuation\">:</span> <span class=\"token scalar\">String</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property-query\">mdx</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token attr-name\">eq</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token object\">frontmatter</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">title</span>\n      <span class=\"token property-query\">date</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">formatString</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"MMMM D, YYYY\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token property\">hero_image_alt</span>\n      <span class=\"token property\">hero_image_credit_link</span>\n      <span class=\"token property\">hero_image_credit_text</span>\n      <span class=\"token object\">hero_image</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token object\">childImageSharp</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">gatsbyImageData</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token property\">body</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위처럼 해줄 수 있어서 imagedata를 가져올 수 있다. gatsbyImageData는 json 타입이다.</p>\n<p>위처럼 설정을 해주고,</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GatsbyImage<span class=\"token punctuation\">,</span> getImage <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'gatsby-plugin-image'</span>\n\n<span class=\"token keyword\">const</span> image <span class=\"token operator\">=</span> <span class=\"token function\">getImage</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>mdx<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>hero_image<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//...</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">GatsbyImage</span></span>\n      <span class=\"token attr-name\">image</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>image<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">alt</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">.</span>mdx<span class=\"token punctuation\">.</span>frontmatter<span class=\"token punctuation\">.</span>hero_image_alt<span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">/></span></span></code></pre></div>\n<p>이렇게 사용해줄 수 있게 되는 것…</p>","frontmatter":{"title":"v4 tutorial","date":"November 23, 2021"}}},"pageContext":{"slug":"/gatsby/v4-tutorial/","previous":{"fields":{"slug":"/nomadcoders/netflix-clone/"},"frontmatter":{"title":"netflix-clone"}},"next":{"fields":{"slug":"/gatsby/gh-pages/"},"frontmatter":{"title":"gh-pages"}}}}}